// @suite: Feature: global

// @test: Basic usage
// ============================================================================

// @file: 1.nx
// ----------------------------------------------------------------------------

global GlobalNumber = 42;
global GlobalNegativeNumber = -42;
global GlobalString1 = "Foo", GlobalString2 = "Bar", GlobalString3 = "Baz";
global GlobalBoolean = true;
global GlobalNull = null;


// @file: 2.nx
// ----------------------------------------------------------------------------

assert.strictEqual(GlobalNumber, 42);
assert.strictEqual(GlobalNegativeNumber, -42);
assert.strictEqual(GlobalString1, "Foo");
assert.strictEqual(GlobalString2, "Bar");
assert.strictEqual(GlobalString3, "Baz");
assert.strictEqual(GlobalBoolean, true);
assert.strictEqual(GlobalNull, null);



// @test: Test 'global' as function
// ============================================================================

function global(x) {
    assert.equal(x, "Foo");
    return "Bar";
}

assert.equal(global("Foo"), "Bar");



// @test: Must have an initializer
// ============================================================================

global ErrorConst; // @error



// @test: Must be a literal
// ============================================================================

global ErrorConst = new Error("Foo"); // @error



// @test: Must not be a keyword
// ============================================================================

global void = null; // @error



// @test: Duplicate global error
// ============================================================================

global Foo = "Foo";
global Foo = "Bar"; // @error
